/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as AppImport } from "./routes/app";
import { Route as TokenTokenIdIndexImport } from "./routes/token.$tokenId.index";

// Create Virtual Routes

const AboutLazyImport = createFileRoute("/about")();
const IndexLazyImport = createFileRoute("/")();
const AppIndexLazyImport = createFileRoute("/app/")();
const CreateLpTokenIdLazyImport = createFileRoute("/create-lp/$tokenId")();
const AppCreateTokenLazyImport = createFileRoute("/app/create-token")();
const AppBondingCurveLazyImport = createFileRoute("/app/bonding-curve")();

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
	path: "/about",
	getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/about.lazy").then((d) => d.Route));

const AppRoute = AppImport.update({
	path: "/app",
	getParentRoute: () => rootRoute,
} as any);

const IndexLazyRoute = IndexLazyImport.update({
	path: "/",
	getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route));

const AppIndexLazyRoute = AppIndexLazyImport.update({
	path: "/",
	getParentRoute: () => AppRoute,
} as any).lazy(() => import("./routes/app.index.lazy").then((d) => d.Route));

const CreateLpTokenIdLazyRoute = CreateLpTokenIdLazyImport.update({
	path: "/create-lp/$tokenId",
	getParentRoute: () => rootRoute,
} as any).lazy(() =>
	import("./routes/create-lp.$tokenId.lazy").then((d) => d.Route),
);

const AppCreateTokenLazyRoute = AppCreateTokenLazyImport.update({
	path: "/create-token",
	getParentRoute: () => AppRoute,
} as any).lazy(() =>
	import("./routes/app.create-token.lazy").then((d) => d.Route),
);

const AppBondingCurveLazyRoute = AppBondingCurveLazyImport.update({
	path: "/bonding-curve",
	getParentRoute: () => AppRoute,
} as any).lazy(() =>
	import("./routes/app.bonding-curve.lazy").then((d) => d.Route),
);

const TokenTokenIdIndexRoute = TokenTokenIdIndexImport.update({
	path: "/token/$tokenId/",
	getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
	interface FileRoutesByPath {
		"/": {
			id: "/";
			path: "/";
			fullPath: "/";
			preLoaderRoute: typeof IndexLazyImport;
			parentRoute: typeof rootRoute;
		};
		"/app": {
			id: "/app";
			path: "/app";
			fullPath: "/app";
			preLoaderRoute: typeof AppImport;
			parentRoute: typeof rootRoute;
		};
		"/about": {
			id: "/about";
			path: "/about";
			fullPath: "/about";
			preLoaderRoute: typeof AboutLazyImport;
			parentRoute: typeof rootRoute;
		};
		"/app/create-token": {
			id: "/app/create-token";
			path: "/create-token";
			fullPath: "/app/create-token";
			preLoaderRoute: typeof AppCreateTokenLazyImport;
			parentRoute: typeof AppImport;
		};
		"/app/bonding-curve": {
			id: "/app/bonding-curve";
			path: "/bonding-curve";
			fullPath: "/app/bonding-curve";
			preLoaderRoute: typeof AppBondingCurveLazyImport;
			parentRoute: typeof AppImport;
		};
		"/create-lp/$tokenId": {
			id: "/create-lp/$tokenId";
			path: "/create-lp/$tokenId";
			fullPath: "/create-lp/$tokenId";
			preLoaderRoute: typeof CreateLpTokenIdLazyImport;
			parentRoute: typeof rootRoute;
		};
		"/app/": {
			id: "/app/";
			path: "/";
			fullPath: "/app/";
			preLoaderRoute: typeof AppIndexLazyImport;
			parentRoute: typeof AppImport;
		};
		"/token/$tokenId/": {
			id: "/token/$tokenId/";
			path: "/token/$tokenId";
			fullPath: "/token/$tokenId";
			preLoaderRoute: typeof TokenTokenIdIndexImport;
			parentRoute: typeof rootRoute;
		};
	}
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
	IndexLazyRoute,
	AppRoute: AppRoute.addChildren({
		AppCreateTokenLazyRoute,
		AppIndexLazyRoute,
	}),
	AboutLazyRoute,
	CreateLpTokenIdLazyRoute,
	TokenTokenIdIndexRoute,
});

/* prettier-ignore-end */
